- import std.file: DirEntry;
- import std.path: asRelativePath;
- import std.format;

- void css(string url)
    link(rel='stylesheet', type='text/css', href='#{url}')

- void js(string url)
    script(src='#{url}')

- void humanReadableSize(ulong size)
    - float fsize = size;
    - auto suffix = "B";
    - foreach (unit; ["", "Ki", "Mi", "Gi"])
        - if (fsize < 1024)
            |#{format("%3.1f%s%s", fsize, unit, suffix)}
            - return;
        - fsize /= 1024.0;
    |#{format("%.1f%s%s", fsize, "Ti", suffix)}

- void fileEntry(DirEntry entry, string baseDirName)
    - auto isDir = entry.isDir;
    tr
        td(width="2%", style="vertical-align: middle;")
            - if (isDir)
                i(class="glyphicon glyphicon-folder-open")
            - else
                i(class="glyphicon glyphicon-file")
        td(width="38%", style="vertical-align: middle;")
            a(href='/#{entry.name}') #{asRelativePath("/" ~ entry.name, baseDirName)}
            td(width="30%", style="vertical-align: middle;")
                - if (isDir)
                    |directory
                - else
                    - humanReadableSize(entry.size);
        td(width="30%", style="vertical-align: middle;") #{entry.timeLastModified}

- void goBackEntry()
    tr
        td(width="2%", style="vertical-align: middle;")
        td(width="38%", style="vertical-align: middle;")
            a(href="..") ..
        td(width="30%", style="vertical-align: middle;")
        td(width="30%", style="vertical-align: middle;")

- void searchForm()
    div(class="input-group")
        input(type="text", class="form-control", name="search", placeholder="Search...", style="width: 300px;")
        div(class="input-group-btn")
            button(class="btn btn-default", type="submit")
                i(class="glyphicon glyphicon-search")

